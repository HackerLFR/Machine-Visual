>树可以看做是图的一种特殊情况,有多个特殊性质:
1.树中任意两个节点之间都有一条且仅有一条简单路径(路径上的任意节点只出现过一次的叫简单路径,即简单路径没有重边没有回路).
2.一颗树有n个节点,且n个节点都连通,有n-1条边;这个性质满足充分必要性.

>>树的基本概念:
1.树的形成(递归)
  -将若干棵树x1, x2, x3...xk的根连接到某一节点root上即为一颗以roor为根的树.
  -空节点也是一棵树
2.有根树/无根树
  -(*)无根树:可以直接转为有根树,一般选无根树的某一个节点作为根当做有根树处理;也可以生成一个"虚拟结点",将该节点作为根.
  -(*)有根树:子树,兄弟,儿子,父亲,虚拟节点(*往往做题时很有用).
3.基本定义:
  .子树
  .深度或高度
  .大小
  路径:任意两节点间都有且仅有一条简单路径.

>>>树形DP常见的状态设计
   .F[i]: 以i为根的子树(加入属性)
   .F[i, 0|1 ... ]; 以i为根的子树中i是否使用
   .F[i, j]:   以i为根的子树中分配了一个权值值为j(注意:抽象思考是整个子树被分配,不是单个节点被分配)
   .F[i, j, 0|1 ...] : 以i为根的子树中分配了一个权值值为j,子树中i是否使用.
   ...等等

>>>>树形DP常见的实现方式:
    . DFS(或记忆化搜索)
      -栈或递归
      - DFS(i)
	{
	   for i的所有儿子j
	   	do  DFS(j);
		
	   用j更新i;
	   return 值;
	}
    . 类拓扑排序